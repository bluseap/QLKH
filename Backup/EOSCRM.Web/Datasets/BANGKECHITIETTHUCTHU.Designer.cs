//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EOSCRM.Web.Datasets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BANGKECHITIETTHUCTHU")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BANGKECHITIETTHUCTHU : global::System.Data.DataSet {
        
        private BANGKECHITIETTHUCTHUDataTable tableBANGKECHITIETTHUCTHU;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BANGKECHITIETTHUCTHU() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected BANGKECHITIETTHUCTHU(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["BANGKECHITIETTHUCTHU"] != null)) {
                    base.Tables.Add(new BANGKECHITIETTHUCTHUDataTable(ds.Tables["BANGKECHITIETTHUCTHU"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BANGKECHITIETTHUCTHUDataTable _BANGKECHITIETTHUCTHU {
            get {
                return this.tableBANGKECHITIETTHUCTHU;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            BANGKECHITIETTHUCTHU cln = ((BANGKECHITIETTHUCTHU)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BANGKECHITIETTHUCTHU"] != null)) {
                    base.Tables.Add(new BANGKECHITIETTHUCTHUDataTable(ds.Tables["BANGKECHITIETTHUCTHU"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableBANGKECHITIETTHUCTHU = ((BANGKECHITIETTHUCTHUDataTable)(base.Tables["BANGKECHITIETTHUCTHU"]));
            if ((initTable == true)) {
                if ((this.tableBANGKECHITIETTHUCTHU != null)) {
                    this.tableBANGKECHITIETTHUCTHU.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "BANGKECHITIETTHUCTHU";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BANGKECHITIETTHUCTHU.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBANGKECHITIETTHUCTHU = new BANGKECHITIETTHUCTHUDataTable();
            base.Tables.Add(this.tableBANGKECHITIETTHUCTHU);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_BANGKECHITIETTHUCTHU() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BANGKECHITIETTHUCTHU ds = new BANGKECHITIETTHUCTHU();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void BANGKECHITIETTHUCTHURowChangeEventHandler(object sender, BANGKECHITIETTHUCTHURowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BANGKECHITIETTHUCTHUDataTable : global::System.Data.TypedTableBase<BANGKECHITIETTHUCTHURow> {
            
            private global::System.Data.DataColumn columnMAKV;
            
            private global::System.Data.DataColumn columnTENKV;
            
            private global::System.Data.DataColumn columnMAHTTT;
            
            private global::System.Data.DataColumn columnTENHTTT;
            
            private global::System.Data.DataColumn columnSOPHIEUCN;
            
            private global::System.Data.DataColumn columnMANVT;
            
            private global::System.Data.DataColumn columnTENNVT;
            
            private global::System.Data.DataColumn columnTHANG;
            
            private global::System.Data.DataColumn columnNAM;
            
            private global::System.Data.DataColumn columnSLHD;
            
            private global::System.Data.DataColumn columnTIENNUOC;
            
            private global::System.Data.DataColumn columnTHUE;
            
            private global::System.Data.DataColumn columnPHI;
            
            private global::System.Data.DataColumn columnTONGCONG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANGKECHITIETTHUCTHUDataTable() {
                this.TableName = "BANGKECHITIETTHUCTHU";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BANGKECHITIETTHUCTHUDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BANGKECHITIETTHUCTHUDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAKVColumn {
                get {
                    return this.columnMAKV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENKVColumn {
                get {
                    return this.columnTENKV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAHTTTColumn {
                get {
                    return this.columnMAHTTT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENHTTTColumn {
                get {
                    return this.columnTENHTTT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOPHIEUCNColumn {
                get {
                    return this.columnSOPHIEUCN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANVTColumn {
                get {
                    return this.columnMANVT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENNVTColumn {
                get {
                    return this.columnTENNVT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn THANGColumn {
                get {
                    return this.columnTHANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMColumn {
                get {
                    return this.columnNAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SLHDColumn {
                get {
                    return this.columnSLHD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIENNUOCColumn {
                get {
                    return this.columnTIENNUOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn THUEColumn {
                get {
                    return this.columnTHUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHIColumn {
                get {
                    return this.columnPHI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TONGCONGColumn {
                get {
                    return this.columnTONGCONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANGKECHITIETTHUCTHURow this[int index] {
                get {
                    return ((BANGKECHITIETTHUCTHURow)(this.Rows[index]));
                }
            }
            
            public event BANGKECHITIETTHUCTHURowChangeEventHandler BANGKECHITIETTHUCTHURowChanging;
            
            public event BANGKECHITIETTHUCTHURowChangeEventHandler BANGKECHITIETTHUCTHURowChanged;
            
            public event BANGKECHITIETTHUCTHURowChangeEventHandler BANGKECHITIETTHUCTHURowDeleting;
            
            public event BANGKECHITIETTHUCTHURowChangeEventHandler BANGKECHITIETTHUCTHURowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBANGKECHITIETTHUCTHURow(BANGKECHITIETTHUCTHURow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANGKECHITIETTHUCTHURow AddBANGKECHITIETTHUCTHURow(string MAKV, string TENKV, string MAHTTT, string TENHTTT, string SOPHIEUCN, string MANVT, string TENNVT, int THANG, int NAM, int SLHD, decimal TIENNUOC, decimal THUE, decimal PHI, decimal TONGCONG) {
                BANGKECHITIETTHUCTHURow rowBANGKECHITIETTHUCTHURow = ((BANGKECHITIETTHUCTHURow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MAKV,
                        TENKV,
                        MAHTTT,
                        TENHTTT,
                        SOPHIEUCN,
                        MANVT,
                        TENNVT,
                        THANG,
                        NAM,
                        SLHD,
                        TIENNUOC,
                        THUE,
                        PHI,
                        TONGCONG};
                rowBANGKECHITIETTHUCTHURow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBANGKECHITIETTHUCTHURow);
                return rowBANGKECHITIETTHUCTHURow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BANGKECHITIETTHUCTHUDataTable cln = ((BANGKECHITIETTHUCTHUDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BANGKECHITIETTHUCTHUDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMAKV = base.Columns["MAKV"];
                this.columnTENKV = base.Columns["TENKV"];
                this.columnMAHTTT = base.Columns["MAHTTT"];
                this.columnTENHTTT = base.Columns["TENHTTT"];
                this.columnSOPHIEUCN = base.Columns["SOPHIEUCN"];
                this.columnMANVT = base.Columns["MANVT"];
                this.columnTENNVT = base.Columns["TENNVT"];
                this.columnTHANG = base.Columns["THANG"];
                this.columnNAM = base.Columns["NAM"];
                this.columnSLHD = base.Columns["SLHD"];
                this.columnTIENNUOC = base.Columns["TIENNUOC"];
                this.columnTHUE = base.Columns["THUE"];
                this.columnPHI = base.Columns["PHI"];
                this.columnTONGCONG = base.Columns["TONGCONG"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMAKV = new global::System.Data.DataColumn("MAKV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAKV);
                this.columnTENKV = new global::System.Data.DataColumn("TENKV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENKV);
                this.columnMAHTTT = new global::System.Data.DataColumn("MAHTTT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAHTTT);
                this.columnTENHTTT = new global::System.Data.DataColumn("TENHTTT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENHTTT);
                this.columnSOPHIEUCN = new global::System.Data.DataColumn("SOPHIEUCN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOPHIEUCN);
                this.columnMANVT = new global::System.Data.DataColumn("MANVT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANVT);
                this.columnTENNVT = new global::System.Data.DataColumn("TENNVT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENNVT);
                this.columnTHANG = new global::System.Data.DataColumn("THANG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHANG);
                this.columnNAM = new global::System.Data.DataColumn("NAM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAM);
                this.columnSLHD = new global::System.Data.DataColumn("SLHD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLHD);
                this.columnTIENNUOC = new global::System.Data.DataColumn("TIENNUOC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIENNUOC);
                this.columnTHUE = new global::System.Data.DataColumn("THUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHUE);
                this.columnPHI = new global::System.Data.DataColumn("PHI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHI);
                this.columnTONGCONG = new global::System.Data.DataColumn("TONGCONG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTONGCONG);
                this.ExtendedProperties.Add("Generator_TablePropName", "_BANGKECHITIETTHUCTHU");
                this.ExtendedProperties.Add("Generator_UserTableName", "BANGKECHITIETTHUCTHU");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANGKECHITIETTHUCTHURow NewBANGKECHITIETTHUCTHURow() {
                return ((BANGKECHITIETTHUCTHURow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BANGKECHITIETTHUCTHURow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BANGKECHITIETTHUCTHURow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BANGKECHITIETTHUCTHURowChanged != null)) {
                    this.BANGKECHITIETTHUCTHURowChanged(this, new BANGKECHITIETTHUCTHURowChangeEvent(((BANGKECHITIETTHUCTHURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BANGKECHITIETTHUCTHURowChanging != null)) {
                    this.BANGKECHITIETTHUCTHURowChanging(this, new BANGKECHITIETTHUCTHURowChangeEvent(((BANGKECHITIETTHUCTHURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BANGKECHITIETTHUCTHURowDeleted != null)) {
                    this.BANGKECHITIETTHUCTHURowDeleted(this, new BANGKECHITIETTHUCTHURowChangeEvent(((BANGKECHITIETTHUCTHURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BANGKECHITIETTHUCTHURowDeleting != null)) {
                    this.BANGKECHITIETTHUCTHURowDeleting(this, new BANGKECHITIETTHUCTHURowChangeEvent(((BANGKECHITIETTHUCTHURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBANGKECHITIETTHUCTHURow(BANGKECHITIETTHUCTHURow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BANGKECHITIETTHUCTHU ds = new BANGKECHITIETTHUCTHU();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BANGKECHITIETTHUCTHUDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BANGKECHITIETTHUCTHURow : global::System.Data.DataRow {
            
            private BANGKECHITIETTHUCTHUDataTable tableBANGKECHITIETTHUCTHU;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BANGKECHITIETTHUCTHURow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBANGKECHITIETTHUCTHU = ((BANGKECHITIETTHUCTHUDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAKV {
                get {
                    try {
                        return ((string)(this[this.tableBANGKECHITIETTHUCTHU.MAKVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAKV\' in table \'BANGKECHITIETTHUCTHU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBANGKECHITIETTHUCTHU.MAKVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENKV {
                get {
                    try {
                        return ((string)(this[this.tableBANGKECHITIETTHUCTHU.TENKVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENKV\' in table \'BANGKECHITIETTHUCTHU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBANGKECHITIETTHUCTHU.TENKVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAHTTT {
                get {
                    try {
                        return ((string)(this[this.tableBANGKECHITIETTHUCTHU.MAHTTTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAHTTT\' in table \'BANGKECHITIETTHUCTHU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBANGKECHITIETTHUCTHU.MAHTTTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENHTTT {
                get {
                    try {
                        return ((string)(this[this.tableBANGKECHITIETTHUCTHU.TENHTTTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENHTTT\' in table \'BANGKECHITIETTHUCTHU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBANGKECHITIETTHUCTHU.TENHTTTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOPHIEUCN {
                get {
                    try {
                        return ((string)(this[this.tableBANGKECHITIETTHUCTHU.SOPHIEUCNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOPHIEUCN\' in table \'BANGKECHITIETTHUCTHU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBANGKECHITIETTHUCTHU.SOPHIEUCNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MANVT {
                get {
                    try {
                        return ((string)(this[this.tableBANGKECHITIETTHUCTHU.MANVTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MANVT\' in table \'BANGKECHITIETTHUCTHU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBANGKECHITIETTHUCTHU.MANVTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENNVT {
                get {
                    try {
                        return ((string)(this[this.tableBANGKECHITIETTHUCTHU.TENNVTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENNVT\' in table \'BANGKECHITIETTHUCTHU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBANGKECHITIETTHUCTHU.TENNVTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int THANG {
                get {
                    try {
                        return ((int)(this[this.tableBANGKECHITIETTHUCTHU.THANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THANG\' in table \'BANGKECHITIETTHUCTHU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBANGKECHITIETTHUCTHU.THANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NAM {
                get {
                    try {
                        return ((int)(this[this.tableBANGKECHITIETTHUCTHU.NAMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAM\' in table \'BANGKECHITIETTHUCTHU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBANGKECHITIETTHUCTHU.NAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SLHD {
                get {
                    try {
                        return ((int)(this[this.tableBANGKECHITIETTHUCTHU.SLHDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLHD\' in table \'BANGKECHITIETTHUCTHU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBANGKECHITIETTHUCTHU.SLHDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIENNUOC {
                get {
                    try {
                        return ((decimal)(this[this.tableBANGKECHITIETTHUCTHU.TIENNUOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIENNUOC\' in table \'BANGKECHITIETTHUCTHU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBANGKECHITIETTHUCTHU.TIENNUOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal THUE {
                get {
                    try {
                        return ((decimal)(this[this.tableBANGKECHITIETTHUCTHU.THUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THUE\' in table \'BANGKECHITIETTHUCTHU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBANGKECHITIETTHUCTHU.THUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PHI {
                get {
                    try {
                        return ((decimal)(this[this.tableBANGKECHITIETTHUCTHU.PHIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHI\' in table \'BANGKECHITIETTHUCTHU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBANGKECHITIETTHUCTHU.PHIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TONGCONG {
                get {
                    try {
                        return ((decimal)(this[this.tableBANGKECHITIETTHUCTHU.TONGCONGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TONGCONG\' in table \'BANGKECHITIETTHUCTHU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBANGKECHITIETTHUCTHU.TONGCONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAKVNull() {
                return this.IsNull(this.tableBANGKECHITIETTHUCTHU.MAKVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAKVNull() {
                this[this.tableBANGKECHITIETTHUCTHU.MAKVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENKVNull() {
                return this.IsNull(this.tableBANGKECHITIETTHUCTHU.TENKVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENKVNull() {
                this[this.tableBANGKECHITIETTHUCTHU.TENKVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAHTTTNull() {
                return this.IsNull(this.tableBANGKECHITIETTHUCTHU.MAHTTTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAHTTTNull() {
                this[this.tableBANGKECHITIETTHUCTHU.MAHTTTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENHTTTNull() {
                return this.IsNull(this.tableBANGKECHITIETTHUCTHU.TENHTTTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENHTTTNull() {
                this[this.tableBANGKECHITIETTHUCTHU.TENHTTTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOPHIEUCNNull() {
                return this.IsNull(this.tableBANGKECHITIETTHUCTHU.SOPHIEUCNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOPHIEUCNNull() {
                this[this.tableBANGKECHITIETTHUCTHU.SOPHIEUCNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMANVTNull() {
                return this.IsNull(this.tableBANGKECHITIETTHUCTHU.MANVTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMANVTNull() {
                this[this.tableBANGKECHITIETTHUCTHU.MANVTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENNVTNull() {
                return this.IsNull(this.tableBANGKECHITIETTHUCTHU.TENNVTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENNVTNull() {
                this[this.tableBANGKECHITIETTHUCTHU.TENNVTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTHANGNull() {
                return this.IsNull(this.tableBANGKECHITIETTHUCTHU.THANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTHANGNull() {
                this[this.tableBANGKECHITIETTHUCTHU.THANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMNull() {
                return this.IsNull(this.tableBANGKECHITIETTHUCTHU.NAMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMNull() {
                this[this.tableBANGKECHITIETTHUCTHU.NAMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLHDNull() {
                return this.IsNull(this.tableBANGKECHITIETTHUCTHU.SLHDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLHDNull() {
                this[this.tableBANGKECHITIETTHUCTHU.SLHDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIENNUOCNull() {
                return this.IsNull(this.tableBANGKECHITIETTHUCTHU.TIENNUOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIENNUOCNull() {
                this[this.tableBANGKECHITIETTHUCTHU.TIENNUOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTHUENull() {
                return this.IsNull(this.tableBANGKECHITIETTHUCTHU.THUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTHUENull() {
                this[this.tableBANGKECHITIETTHUCTHU.THUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHINull() {
                return this.IsNull(this.tableBANGKECHITIETTHUCTHU.PHIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHINull() {
                this[this.tableBANGKECHITIETTHUCTHU.PHIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTONGCONGNull() {
                return this.IsNull(this.tableBANGKECHITIETTHUCTHU.TONGCONGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTONGCONGNull() {
                this[this.tableBANGKECHITIETTHUCTHU.TONGCONGColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BANGKECHITIETTHUCTHURowChangeEvent : global::System.EventArgs {
            
            private BANGKECHITIETTHUCTHURow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANGKECHITIETTHUCTHURowChangeEvent(BANGKECHITIETTHUCTHURow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BANGKECHITIETTHUCTHURow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591