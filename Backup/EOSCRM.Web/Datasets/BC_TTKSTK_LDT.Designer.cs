//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4959
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EOSCRM.Web.Datasets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BC_TTKSTK_LDT")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BC_TTKSTK_LDT : global::System.Data.DataSet {
        
        private BD_TTKSTK_LDTDataTable tableBD_TTKSTK_LDT;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BC_TTKSTK_LDT() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected BC_TTKSTK_LDT(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["BD_TTKSTK_LDT"] != null)) {
                    base.Tables.Add(new BD_TTKSTK_LDTDataTable(ds.Tables["BD_TTKSTK_LDT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BD_TTKSTK_LDTDataTable BD_TTKSTK_LDT {
            get {
                return this.tableBD_TTKSTK_LDT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            BC_TTKSTK_LDT cln = ((BC_TTKSTK_LDT)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BD_TTKSTK_LDT"] != null)) {
                    base.Tables.Add(new BD_TTKSTK_LDTDataTable(ds.Tables["BD_TTKSTK_LDT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableBD_TTKSTK_LDT = ((BD_TTKSTK_LDTDataTable)(base.Tables["BD_TTKSTK_LDT"]));
            if ((initTable == true)) {
                if ((this.tableBD_TTKSTK_LDT != null)) {
                    this.tableBD_TTKSTK_LDT.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "BC_TTKSTK_LDT";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BC_TTKSTK_LDT.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBD_TTKSTK_LDT = new BD_TTKSTK_LDTDataTable();
            base.Tables.Add(this.tableBD_TTKSTK_LDT);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBD_TTKSTK_LDT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BC_TTKSTK_LDT ds = new BC_TTKSTK_LDT();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void BD_TTKSTK_LDTRowChangeEventHandler(object sender, BD_TTKSTK_LDTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BD_TTKSTK_LDTDataTable : global::System.Data.TypedTableBase<BD_TTKSTK_LDTRow> {
            
            private global::System.Data.DataColumn columnMADON;
            
            private global::System.Data.DataColumn columnTENKH;
            
            private global::System.Data.DataColumn columnDIACHI;
            
            private global::System.Data.DataColumn columnPHANLOAI;
            
            private global::System.Data.DataColumn columnNGAYDK;
            
            private global::System.Data.DataColumn columnNGAYKS;
            
            private global::System.Data.DataColumn columnNVTK;
            
            private global::System.Data.DataColumn columnNGAYLCT;
            
            private global::System.Data.DataColumn columnNVCT;
            
            private global::System.Data.DataColumn columnTONGGIATRICT;
            
            private global::System.Data.DataColumn columnGHICHU;
            
            private global::System.Data.DataColumn columnTTHOSO;
            
            private global::System.Data.DataColumn columnDISORDER;
            
            private global::System.Data.DataColumn columnMAKV;
            
            private global::System.Data.DataColumn columnTENKV;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BD_TTKSTK_LDTDataTable() {
                this.TableName = "BD_TTKSTK_LDT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BD_TTKSTK_LDTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BD_TTKSTK_LDTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADONColumn {
                get {
                    return this.columnMADON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENKHColumn {
                get {
                    return this.columnTENKH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DIACHIColumn {
                get {
                    return this.columnDIACHI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHANLOAIColumn {
                get {
                    return this.columnPHANLOAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYDKColumn {
                get {
                    return this.columnNGAYDK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYKSColumn {
                get {
                    return this.columnNGAYKS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NVTKColumn {
                get {
                    return this.columnNVTK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYLCTColumn {
                get {
                    return this.columnNGAYLCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NVCTColumn {
                get {
                    return this.columnNVCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TONGGIATRICTColumn {
                get {
                    return this.columnTONGGIATRICT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GHICHUColumn {
                get {
                    return this.columnGHICHU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TTHOSOColumn {
                get {
                    return this.columnTTHOSO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DISORDERColumn {
                get {
                    return this.columnDISORDER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAKVColumn {
                get {
                    return this.columnMAKV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENKVColumn {
                get {
                    return this.columnTENKV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BD_TTKSTK_LDTRow this[int index] {
                get {
                    return ((BD_TTKSTK_LDTRow)(this.Rows[index]));
                }
            }
            
            public event BD_TTKSTK_LDTRowChangeEventHandler BD_TTKSTK_LDTRowChanging;
            
            public event BD_TTKSTK_LDTRowChangeEventHandler BD_TTKSTK_LDTRowChanged;
            
            public event BD_TTKSTK_LDTRowChangeEventHandler BD_TTKSTK_LDTRowDeleting;
            
            public event BD_TTKSTK_LDTRowChangeEventHandler BD_TTKSTK_LDTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBD_TTKSTK_LDTRow(BD_TTKSTK_LDTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BD_TTKSTK_LDTRow AddBD_TTKSTK_LDTRow(string MADON, string TENKH, string DIACHI, string PHANLOAI, System.DateTime NGAYDK, System.DateTime NGAYKS, string NVTK, decimal NGAYLCT, string NVCT, decimal TONGGIATRICT, string GHICHU, string TTHOSO, int DISORDER, string MAKV, string TENKV) {
                BD_TTKSTK_LDTRow rowBD_TTKSTK_LDTRow = ((BD_TTKSTK_LDTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MADON,
                        TENKH,
                        DIACHI,
                        PHANLOAI,
                        NGAYDK,
                        NGAYKS,
                        NVTK,
                        NGAYLCT,
                        NVCT,
                        TONGGIATRICT,
                        GHICHU,
                        TTHOSO,
                        DISORDER,
                        MAKV,
                        TENKV};
                rowBD_TTKSTK_LDTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBD_TTKSTK_LDTRow);
                return rowBD_TTKSTK_LDTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BD_TTKSTK_LDTDataTable cln = ((BD_TTKSTK_LDTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BD_TTKSTK_LDTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMADON = base.Columns["MADON"];
                this.columnTENKH = base.Columns["TENKH"];
                this.columnDIACHI = base.Columns["DIACHI"];
                this.columnPHANLOAI = base.Columns["PHANLOAI"];
                this.columnNGAYDK = base.Columns["NGAYDK"];
                this.columnNGAYKS = base.Columns["NGAYKS"];
                this.columnNVTK = base.Columns["NVTK"];
                this.columnNGAYLCT = base.Columns["NGAYLCT"];
                this.columnNVCT = base.Columns["NVCT"];
                this.columnTONGGIATRICT = base.Columns["TONGGIATRICT"];
                this.columnGHICHU = base.Columns["GHICHU"];
                this.columnTTHOSO = base.Columns["TTHOSO"];
                this.columnDISORDER = base.Columns["DISORDER"];
                this.columnMAKV = base.Columns["MAKV"];
                this.columnTENKV = base.Columns["TENKV"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMADON = new global::System.Data.DataColumn("MADON", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADON);
                this.columnTENKH = new global::System.Data.DataColumn("TENKH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENKH);
                this.columnDIACHI = new global::System.Data.DataColumn("DIACHI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIACHI);
                this.columnPHANLOAI = new global::System.Data.DataColumn("PHANLOAI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHANLOAI);
                this.columnNGAYDK = new global::System.Data.DataColumn("NGAYDK", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYDK);
                this.columnNGAYKS = new global::System.Data.DataColumn("NGAYKS", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYKS);
                this.columnNVTK = new global::System.Data.DataColumn("NVTK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNVTK);
                this.columnNGAYLCT = new global::System.Data.DataColumn("NGAYLCT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYLCT);
                this.columnNVCT = new global::System.Data.DataColumn("NVCT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNVCT);
                this.columnTONGGIATRICT = new global::System.Data.DataColumn("TONGGIATRICT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTONGGIATRICT);
                this.columnGHICHU = new global::System.Data.DataColumn("GHICHU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGHICHU);
                this.columnTTHOSO = new global::System.Data.DataColumn("TTHOSO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTTHOSO);
                this.columnDISORDER = new global::System.Data.DataColumn("DISORDER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISORDER);
                this.columnMAKV = new global::System.Data.DataColumn("MAKV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAKV);
                this.columnTENKV = new global::System.Data.DataColumn("TENKV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENKV);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BD_TTKSTK_LDTRow NewBD_TTKSTK_LDTRow() {
                return ((BD_TTKSTK_LDTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BD_TTKSTK_LDTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BD_TTKSTK_LDTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BD_TTKSTK_LDTRowChanged != null)) {
                    this.BD_TTKSTK_LDTRowChanged(this, new BD_TTKSTK_LDTRowChangeEvent(((BD_TTKSTK_LDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BD_TTKSTK_LDTRowChanging != null)) {
                    this.BD_TTKSTK_LDTRowChanging(this, new BD_TTKSTK_LDTRowChangeEvent(((BD_TTKSTK_LDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BD_TTKSTK_LDTRowDeleted != null)) {
                    this.BD_TTKSTK_LDTRowDeleted(this, new BD_TTKSTK_LDTRowChangeEvent(((BD_TTKSTK_LDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BD_TTKSTK_LDTRowDeleting != null)) {
                    this.BD_TTKSTK_LDTRowDeleting(this, new BD_TTKSTK_LDTRowChangeEvent(((BD_TTKSTK_LDTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBD_TTKSTK_LDTRow(BD_TTKSTK_LDTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BC_TTKSTK_LDT ds = new BC_TTKSTK_LDT();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BD_TTKSTK_LDTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BD_TTKSTK_LDTRow : global::System.Data.DataRow {
            
            private BD_TTKSTK_LDTDataTable tableBD_TTKSTK_LDT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BD_TTKSTK_LDTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBD_TTKSTK_LDT = ((BD_TTKSTK_LDTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MADON {
                get {
                    try {
                        return ((string)(this[this.tableBD_TTKSTK_LDT.MADONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADON\' in table \'BD_TTKSTK_LDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBD_TTKSTK_LDT.MADONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENKH {
                get {
                    try {
                        return ((string)(this[this.tableBD_TTKSTK_LDT.TENKHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENKH\' in table \'BD_TTKSTK_LDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBD_TTKSTK_LDT.TENKHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIACHI {
                get {
                    try {
                        return ((string)(this[this.tableBD_TTKSTK_LDT.DIACHIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DIACHI\' in table \'BD_TTKSTK_LDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBD_TTKSTK_LDT.DIACHIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHANLOAI {
                get {
                    try {
                        return ((string)(this[this.tableBD_TTKSTK_LDT.PHANLOAIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHANLOAI\' in table \'BD_TTKSTK_LDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBD_TTKSTK_LDT.PHANLOAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NGAYDK {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBD_TTKSTK_LDT.NGAYDKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYDK\' in table \'BD_TTKSTK_LDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBD_TTKSTK_LDT.NGAYDKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NGAYKS {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBD_TTKSTK_LDT.NGAYKSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYKS\' in table \'BD_TTKSTK_LDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBD_TTKSTK_LDT.NGAYKSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NVTK {
                get {
                    try {
                        return ((string)(this[this.tableBD_TTKSTK_LDT.NVTKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NVTK\' in table \'BD_TTKSTK_LDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBD_TTKSTK_LDT.NVTKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NGAYLCT {
                get {
                    try {
                        return ((decimal)(this[this.tableBD_TTKSTK_LDT.NGAYLCTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYLCT\' in table \'BD_TTKSTK_LDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBD_TTKSTK_LDT.NGAYLCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NVCT {
                get {
                    try {
                        return ((string)(this[this.tableBD_TTKSTK_LDT.NVCTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NVCT\' in table \'BD_TTKSTK_LDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBD_TTKSTK_LDT.NVCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TONGGIATRICT {
                get {
                    try {
                        return ((decimal)(this[this.tableBD_TTKSTK_LDT.TONGGIATRICTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TONGGIATRICT\' in table \'BD_TTKSTK_LDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBD_TTKSTK_LDT.TONGGIATRICTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GHICHU {
                get {
                    try {
                        return ((string)(this[this.tableBD_TTKSTK_LDT.GHICHUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GHICHU\' in table \'BD_TTKSTK_LDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBD_TTKSTK_LDT.GHICHUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TTHOSO {
                get {
                    try {
                        return ((string)(this[this.tableBD_TTKSTK_LDT.TTHOSOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TTHOSO\' in table \'BD_TTKSTK_LDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBD_TTKSTK_LDT.TTHOSOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DISORDER {
                get {
                    try {
                        return ((int)(this[this.tableBD_TTKSTK_LDT.DISORDERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISORDER\' in table \'BD_TTKSTK_LDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBD_TTKSTK_LDT.DISORDERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAKV {
                get {
                    try {
                        return ((string)(this[this.tableBD_TTKSTK_LDT.MAKVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAKV\' in table \'BD_TTKSTK_LDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBD_TTKSTK_LDT.MAKVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENKV {
                get {
                    try {
                        return ((string)(this[this.tableBD_TTKSTK_LDT.TENKVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENKV\' in table \'BD_TTKSTK_LDT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBD_TTKSTK_LDT.TENKVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADONNull() {
                return this.IsNull(this.tableBD_TTKSTK_LDT.MADONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADONNull() {
                this[this.tableBD_TTKSTK_LDT.MADONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENKHNull() {
                return this.IsNull(this.tableBD_TTKSTK_LDT.TENKHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENKHNull() {
                this[this.tableBD_TTKSTK_LDT.TENKHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIACHINull() {
                return this.IsNull(this.tableBD_TTKSTK_LDT.DIACHIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIACHINull() {
                this[this.tableBD_TTKSTK_LDT.DIACHIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHANLOAINull() {
                return this.IsNull(this.tableBD_TTKSTK_LDT.PHANLOAIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHANLOAINull() {
                this[this.tableBD_TTKSTK_LDT.PHANLOAIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYDKNull() {
                return this.IsNull(this.tableBD_TTKSTK_LDT.NGAYDKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYDKNull() {
                this[this.tableBD_TTKSTK_LDT.NGAYDKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYKSNull() {
                return this.IsNull(this.tableBD_TTKSTK_LDT.NGAYKSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYKSNull() {
                this[this.tableBD_TTKSTK_LDT.NGAYKSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNVTKNull() {
                return this.IsNull(this.tableBD_TTKSTK_LDT.NVTKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNVTKNull() {
                this[this.tableBD_TTKSTK_LDT.NVTKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYLCTNull() {
                return this.IsNull(this.tableBD_TTKSTK_LDT.NGAYLCTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYLCTNull() {
                this[this.tableBD_TTKSTK_LDT.NGAYLCTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNVCTNull() {
                return this.IsNull(this.tableBD_TTKSTK_LDT.NVCTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNVCTNull() {
                this[this.tableBD_TTKSTK_LDT.NVCTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTONGGIATRICTNull() {
                return this.IsNull(this.tableBD_TTKSTK_LDT.TONGGIATRICTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTONGGIATRICTNull() {
                this[this.tableBD_TTKSTK_LDT.TONGGIATRICTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGHICHUNull() {
                return this.IsNull(this.tableBD_TTKSTK_LDT.GHICHUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGHICHUNull() {
                this[this.tableBD_TTKSTK_LDT.GHICHUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTTHOSONull() {
                return this.IsNull(this.tableBD_TTKSTK_LDT.TTHOSOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTTHOSONull() {
                this[this.tableBD_TTKSTK_LDT.TTHOSOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISORDERNull() {
                return this.IsNull(this.tableBD_TTKSTK_LDT.DISORDERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISORDERNull() {
                this[this.tableBD_TTKSTK_LDT.DISORDERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAKVNull() {
                return this.IsNull(this.tableBD_TTKSTK_LDT.MAKVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAKVNull() {
                this[this.tableBD_TTKSTK_LDT.MAKVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENKVNull() {
                return this.IsNull(this.tableBD_TTKSTK_LDT.TENKVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENKVNull() {
                this[this.tableBD_TTKSTK_LDT.TENKVColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BD_TTKSTK_LDTRowChangeEvent : global::System.EventArgs {
            
            private BD_TTKSTK_LDTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BD_TTKSTK_LDTRowChangeEvent(BD_TTKSTK_LDTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BD_TTKSTK_LDTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591