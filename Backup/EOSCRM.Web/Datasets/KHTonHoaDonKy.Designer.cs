//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EOSCRM.Web.Datasets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("KHTonHoaDonKy")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class KHTonHoaDonKy : global::System.Data.DataSet {
        
        private KHTonHoaDonKyDataTable tableKHTonHoaDonKy;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public KHTonHoaDonKy() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected KHTonHoaDonKy(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["KHTonHoaDonKy"] != null)) {
                    base.Tables.Add(new KHTonHoaDonKyDataTable(ds.Tables["KHTonHoaDonKy"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KHTonHoaDonKyDataTable _KHTonHoaDonKy {
            get {
                return this.tableKHTonHoaDonKy;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            KHTonHoaDonKy cln = ((KHTonHoaDonKy)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["KHTonHoaDonKy"] != null)) {
                    base.Tables.Add(new KHTonHoaDonKyDataTable(ds.Tables["KHTonHoaDonKy"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableKHTonHoaDonKy = ((KHTonHoaDonKyDataTable)(base.Tables["KHTonHoaDonKy"]));
            if ((initTable == true)) {
                if ((this.tableKHTonHoaDonKy != null)) {
                    this.tableKHTonHoaDonKy.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "KHTonHoaDonKy";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/KHTonHoaDonKy.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableKHTonHoaDonKy = new KHTonHoaDonKyDataTable();
            base.Tables.Add(this.tableKHTonHoaDonKy);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_KHTonHoaDonKy() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            KHTonHoaDonKy ds = new KHTonHoaDonKy();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void KHTonHoaDonKyRowChangeEventHandler(object sender, KHTonHoaDonKyRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KHTonHoaDonKyDataTable : global::System.Data.TypedTableBase<KHTonHoaDonKyRow> {
            
            private global::System.Data.DataColumn columnMaDP;
            
            private global::System.Data.DataColumn columnTenDP;
            
            private global::System.Data.DataColumn columnMaKV;
            
            private global::System.Data.DataColumn columnTenKV;
            
            private global::System.Data.DataColumn columnSoHD;
            
            private global::System.Data.DataColumn columnSoTien;
            
            private global::System.Data.DataColumn columnHDTon;
            
            private global::System.Data.DataColumn columnM3Ton;
            
            private global::System.Data.DataColumn columnPhiNTTon;
            
            private global::System.Data.DataColumn columnTienNuocTon;
            
            private global::System.Data.DataColumn columnTongTienTon;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHTonHoaDonKyDataTable() {
                this.TableName = "KHTonHoaDonKy";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KHTonHoaDonKyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KHTonHoaDonKyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaDPColumn {
                get {
                    return this.columnMaDP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenDPColumn {
                get {
                    return this.columnTenDP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaKVColumn {
                get {
                    return this.columnMaKV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenKVColumn {
                get {
                    return this.columnTenKV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SoHDColumn {
                get {
                    return this.columnSoHD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SoTienColumn {
                get {
                    return this.columnSoTien;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HDTonColumn {
                get {
                    return this.columnHDTon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M3TonColumn {
                get {
                    return this.columnM3Ton;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhiNTTonColumn {
                get {
                    return this.columnPhiNTTon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TienNuocTonColumn {
                get {
                    return this.columnTienNuocTon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TongTienTonColumn {
                get {
                    return this.columnTongTienTon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHTonHoaDonKyRow this[int index] {
                get {
                    return ((KHTonHoaDonKyRow)(this.Rows[index]));
                }
            }
            
            public event KHTonHoaDonKyRowChangeEventHandler KHTonHoaDonKyRowChanging;
            
            public event KHTonHoaDonKyRowChangeEventHandler KHTonHoaDonKyRowChanged;
            
            public event KHTonHoaDonKyRowChangeEventHandler KHTonHoaDonKyRowDeleting;
            
            public event KHTonHoaDonKyRowChangeEventHandler KHTonHoaDonKyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKHTonHoaDonKyRow(KHTonHoaDonKyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHTonHoaDonKyRow AddKHTonHoaDonKyRow(string MaDP, string TenDP, string MaKV, string TenKV, int SoHD, decimal SoTien, int HDTon, int M3Ton, decimal PhiNTTon, decimal TienNuocTon, decimal TongTienTon) {
                KHTonHoaDonKyRow rowKHTonHoaDonKyRow = ((KHTonHoaDonKyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MaDP,
                        TenDP,
                        MaKV,
                        TenKV,
                        SoHD,
                        SoTien,
                        HDTon,
                        M3Ton,
                        PhiNTTon,
                        TienNuocTon,
                        TongTienTon};
                rowKHTonHoaDonKyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKHTonHoaDonKyRow);
                return rowKHTonHoaDonKyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                KHTonHoaDonKyDataTable cln = ((KHTonHoaDonKyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KHTonHoaDonKyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaDP = base.Columns["MaDP"];
                this.columnTenDP = base.Columns["TenDP"];
                this.columnMaKV = base.Columns["MaKV"];
                this.columnTenKV = base.Columns["TenKV"];
                this.columnSoHD = base.Columns["SoHD"];
                this.columnSoTien = base.Columns["SoTien"];
                this.columnHDTon = base.Columns["HDTon"];
                this.columnM3Ton = base.Columns["M3Ton"];
                this.columnPhiNTTon = base.Columns["PhiNTTon"];
                this.columnTienNuocTon = base.Columns["TienNuocTon"];
                this.columnTongTienTon = base.Columns["TongTienTon"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaDP = new global::System.Data.DataColumn("MaDP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaDP);
                this.columnTenDP = new global::System.Data.DataColumn("TenDP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenDP);
                this.columnMaKV = new global::System.Data.DataColumn("MaKV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaKV);
                this.columnTenKV = new global::System.Data.DataColumn("TenKV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenKV);
                this.columnSoHD = new global::System.Data.DataColumn("SoHD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoHD);
                this.columnSoTien = new global::System.Data.DataColumn("SoTien", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoTien);
                this.columnHDTon = new global::System.Data.DataColumn("HDTon", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHDTon);
                this.columnM3Ton = new global::System.Data.DataColumn("M3Ton", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM3Ton);
                this.columnPhiNTTon = new global::System.Data.DataColumn("PhiNTTon", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhiNTTon);
                this.columnTienNuocTon = new global::System.Data.DataColumn("TienNuocTon", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTienNuocTon);
                this.columnTongTienTon = new global::System.Data.DataColumn("TongTienTon", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTongTienTon);
                this.columnMaDP.Caption = "MADP";
                this.columnMaKV.Caption = "MAKV";
                this.columnTenKV.Caption = "TENKV";
                this.ExtendedProperties.Add("Generator_TablePropName", "_KHTonHoaDonKy");
                this.ExtendedProperties.Add("Generator_UserTableName", "KHTonHoaDonKy");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHTonHoaDonKyRow NewKHTonHoaDonKyRow() {
                return ((KHTonHoaDonKyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KHTonHoaDonKyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(KHTonHoaDonKyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KHTonHoaDonKyRowChanged != null)) {
                    this.KHTonHoaDonKyRowChanged(this, new KHTonHoaDonKyRowChangeEvent(((KHTonHoaDonKyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KHTonHoaDonKyRowChanging != null)) {
                    this.KHTonHoaDonKyRowChanging(this, new KHTonHoaDonKyRowChangeEvent(((KHTonHoaDonKyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KHTonHoaDonKyRowDeleted != null)) {
                    this.KHTonHoaDonKyRowDeleted(this, new KHTonHoaDonKyRowChangeEvent(((KHTonHoaDonKyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KHTonHoaDonKyRowDeleting != null)) {
                    this.KHTonHoaDonKyRowDeleting(this, new KHTonHoaDonKyRowChangeEvent(((KHTonHoaDonKyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKHTonHoaDonKyRow(KHTonHoaDonKyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                KHTonHoaDonKy ds = new KHTonHoaDonKy();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KHTonHoaDonKyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KHTonHoaDonKyRow : global::System.Data.DataRow {
            
            private KHTonHoaDonKyDataTable tableKHTonHoaDonKy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KHTonHoaDonKyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKHTonHoaDonKy = ((KHTonHoaDonKyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaDP {
                get {
                    try {
                        return ((string)(this[this.tableKHTonHoaDonKy.MaDPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaDP\' in table \'KHTonHoaDonKy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHTonHoaDonKy.MaDPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenDP {
                get {
                    try {
                        return ((string)(this[this.tableKHTonHoaDonKy.TenDPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenDP\' in table \'KHTonHoaDonKy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHTonHoaDonKy.TenDPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaKV {
                get {
                    try {
                        return ((string)(this[this.tableKHTonHoaDonKy.MaKVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaKV\' in table \'KHTonHoaDonKy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHTonHoaDonKy.MaKVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenKV {
                get {
                    try {
                        return ((string)(this[this.tableKHTonHoaDonKy.TenKVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenKV\' in table \'KHTonHoaDonKy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHTonHoaDonKy.TenKVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SoHD {
                get {
                    try {
                        return ((int)(this[this.tableKHTonHoaDonKy.SoHDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SoHD\' in table \'KHTonHoaDonKy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHTonHoaDonKy.SoHDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SoTien {
                get {
                    try {
                        return ((decimal)(this[this.tableKHTonHoaDonKy.SoTienColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SoTien\' in table \'KHTonHoaDonKy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHTonHoaDonKy.SoTienColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HDTon {
                get {
                    try {
                        return ((int)(this[this.tableKHTonHoaDonKy.HDTonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HDTon\' in table \'KHTonHoaDonKy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHTonHoaDonKy.HDTonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int M3Ton {
                get {
                    try {
                        return ((int)(this[this.tableKHTonHoaDonKy.M3TonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M3Ton\' in table \'KHTonHoaDonKy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHTonHoaDonKy.M3TonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PhiNTTon {
                get {
                    try {
                        return ((decimal)(this[this.tableKHTonHoaDonKy.PhiNTTonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhiNTTon\' in table \'KHTonHoaDonKy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHTonHoaDonKy.PhiNTTonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TienNuocTon {
                get {
                    try {
                        return ((decimal)(this[this.tableKHTonHoaDonKy.TienNuocTonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TienNuocTon\' in table \'KHTonHoaDonKy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHTonHoaDonKy.TienNuocTonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TongTienTon {
                get {
                    try {
                        return ((decimal)(this[this.tableKHTonHoaDonKy.TongTienTonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TongTienTon\' in table \'KHTonHoaDonKy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHTonHoaDonKy.TongTienTonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaDPNull() {
                return this.IsNull(this.tableKHTonHoaDonKy.MaDPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaDPNull() {
                this[this.tableKHTonHoaDonKy.MaDPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenDPNull() {
                return this.IsNull(this.tableKHTonHoaDonKy.TenDPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenDPNull() {
                this[this.tableKHTonHoaDonKy.TenDPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaKVNull() {
                return this.IsNull(this.tableKHTonHoaDonKy.MaKVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaKVNull() {
                this[this.tableKHTonHoaDonKy.MaKVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenKVNull() {
                return this.IsNull(this.tableKHTonHoaDonKy.TenKVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenKVNull() {
                this[this.tableKHTonHoaDonKy.TenKVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoHDNull() {
                return this.IsNull(this.tableKHTonHoaDonKy.SoHDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoHDNull() {
                this[this.tableKHTonHoaDonKy.SoHDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoTienNull() {
                return this.IsNull(this.tableKHTonHoaDonKy.SoTienColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoTienNull() {
                this[this.tableKHTonHoaDonKy.SoTienColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHDTonNull() {
                return this.IsNull(this.tableKHTonHoaDonKy.HDTonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHDTonNull() {
                this[this.tableKHTonHoaDonKy.HDTonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM3TonNull() {
                return this.IsNull(this.tableKHTonHoaDonKy.M3TonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM3TonNull() {
                this[this.tableKHTonHoaDonKy.M3TonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhiNTTonNull() {
                return this.IsNull(this.tableKHTonHoaDonKy.PhiNTTonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhiNTTonNull() {
                this[this.tableKHTonHoaDonKy.PhiNTTonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTienNuocTonNull() {
                return this.IsNull(this.tableKHTonHoaDonKy.TienNuocTonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTienNuocTonNull() {
                this[this.tableKHTonHoaDonKy.TienNuocTonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTongTienTonNull() {
                return this.IsNull(this.tableKHTonHoaDonKy.TongTienTonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTongTienTonNull() {
                this[this.tableKHTonHoaDonKy.TongTienTonColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KHTonHoaDonKyRowChangeEvent : global::System.EventArgs {
            
            private KHTonHoaDonKyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHTonHoaDonKyRowChangeEvent(KHTonHoaDonKyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHTonHoaDonKyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591