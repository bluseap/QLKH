//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EOSCRM.Web.Datasets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSTTBANG")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSTTBANG : global::System.Data.DataSet {
        
        private DSTTBANGDataTable tableDSTTBANG;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSTTBANG() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSTTBANG(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DSTTBANG"] != null)) {
                    base.Tables.Add(new DSTTBANGDataTable(ds.Tables["DSTTBANG"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DSTTBANGDataTable _DSTTBANG {
            get {
                return this.tableDSTTBANG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DSTTBANG cln = ((DSTTBANG)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DSTTBANG"] != null)) {
                    base.Tables.Add(new DSTTBANGDataTable(ds.Tables["DSTTBANG"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDSTTBANG = ((DSTTBANGDataTable)(base.Tables["DSTTBANG"]));
            if ((initTable == true)) {
                if ((this.tableDSTTBANG != null)) {
                    this.tableDSTTBANG.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSTTBANG";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSTTBANG.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDSTTBANG = new DSTTBANGDataTable();
            base.Tables.Add(this.tableDSTTBANG);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_DSTTBANG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSTTBANG ds = new DSTTBANG();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DSTTBANGRowChangeEventHandler(object sender, DSTTBANGRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DSTTBANGDataTable : global::System.Data.TypedTableBase<DSTTBANGRow> {
            
            private global::System.Data.DataColumn columnMADP;
            
            private global::System.Data.DataColumn columnMADB;
            
            private global::System.Data.DataColumn columnSODB;
            
            private global::System.Data.DataColumn columnTENKH;
            
            private global::System.Data.DataColumn columnTENDP;
            
            private global::System.Data.DataColumn columnMAKV;
            
            private global::System.Data.DataColumn columnTENKV;
            
            private global::System.Data.DataColumn columnMAMDSD;
            
            private global::System.Data.DataColumn columnTENMDSD;
            
            private global::System.Data.DataColumn columnCHISODAU;
            
            private global::System.Data.DataColumn columnCHISOCUOI;
            
            private global::System.Data.DataColumn columnKLTIEUTHU;
            
            private global::System.Data.DataColumn columnTHANG1;
            
            private global::System.Data.DataColumn columnTHANG2;
            
            private global::System.Data.DataColumn columnTTHAIGHI;
            
            private global::System.Data.DataColumn columnTENTTHAI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSTTBANGDataTable() {
                this.TableName = "DSTTBANG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DSTTBANGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DSTTBANGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADPColumn {
                get {
                    return this.columnMADP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADBColumn {
                get {
                    return this.columnMADB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SODBColumn {
                get {
                    return this.columnSODB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENKHColumn {
                get {
                    return this.columnTENKH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENDPColumn {
                get {
                    return this.columnTENDP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAKVColumn {
                get {
                    return this.columnMAKV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENKVColumn {
                get {
                    return this.columnTENKV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAMDSDColumn {
                get {
                    return this.columnMAMDSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENMDSDColumn {
                get {
                    return this.columnTENMDSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHISODAUColumn {
                get {
                    return this.columnCHISODAU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHISOCUOIColumn {
                get {
                    return this.columnCHISOCUOI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KLTIEUTHUColumn {
                get {
                    return this.columnKLTIEUTHU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn THANG1Column {
                get {
                    return this.columnTHANG1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn THANG2Column {
                get {
                    return this.columnTHANG2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TTHAIGHIColumn {
                get {
                    return this.columnTTHAIGHI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENTTHAIColumn {
                get {
                    return this.columnTENTTHAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSTTBANGRow this[int index] {
                get {
                    return ((DSTTBANGRow)(this.Rows[index]));
                }
            }
            
            public event DSTTBANGRowChangeEventHandler DSTTBANGRowChanging;
            
            public event DSTTBANGRowChangeEventHandler DSTTBANGRowChanged;
            
            public event DSTTBANGRowChangeEventHandler DSTTBANGRowDeleting;
            
            public event DSTTBANGRowChangeEventHandler DSTTBANGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDSTTBANGRow(DSTTBANGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSTTBANGRow AddDSTTBANGRow(
                        string MADP, 
                        string MADB, 
                        string SODB, 
                        string TENKH, 
                        string TENDP, 
                        string MAKV, 
                        string TENKV, 
                        string MAMDSD, 
                        string TENMDSD, 
                        decimal CHISODAU, 
                        decimal CHISOCUOI, 
                        decimal KLTIEUTHU, 
                        decimal THANG1, 
                        decimal THANG2, 
                        string TTHAIGHI, 
                        string TENTTHAI) {
                DSTTBANGRow rowDSTTBANGRow = ((DSTTBANGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MADP,
                        MADB,
                        SODB,
                        TENKH,
                        TENDP,
                        MAKV,
                        TENKV,
                        MAMDSD,
                        TENMDSD,
                        CHISODAU,
                        CHISOCUOI,
                        KLTIEUTHU,
                        THANG1,
                        THANG2,
                        TTHAIGHI,
                        TENTTHAI};
                rowDSTTBANGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDSTTBANGRow);
                return rowDSTTBANGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DSTTBANGDataTable cln = ((DSTTBANGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DSTTBANGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMADP = base.Columns["MADP"];
                this.columnMADB = base.Columns["MADB"];
                this.columnSODB = base.Columns["SODB"];
                this.columnTENKH = base.Columns["TENKH"];
                this.columnTENDP = base.Columns["TENDP"];
                this.columnMAKV = base.Columns["MAKV"];
                this.columnTENKV = base.Columns["TENKV"];
                this.columnMAMDSD = base.Columns["MAMDSD"];
                this.columnTENMDSD = base.Columns["TENMDSD"];
                this.columnCHISODAU = base.Columns["CHISODAU"];
                this.columnCHISOCUOI = base.Columns["CHISOCUOI"];
                this.columnKLTIEUTHU = base.Columns["KLTIEUTHU"];
                this.columnTHANG1 = base.Columns["THANG1"];
                this.columnTHANG2 = base.Columns["THANG2"];
                this.columnTTHAIGHI = base.Columns["TTHAIGHI"];
                this.columnTENTTHAI = base.Columns["TENTTHAI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMADP = new global::System.Data.DataColumn("MADP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADP);
                this.columnMADB = new global::System.Data.DataColumn("MADB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADB);
                this.columnSODB = new global::System.Data.DataColumn("SODB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSODB);
                this.columnTENKH = new global::System.Data.DataColumn("TENKH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENKH);
                this.columnTENDP = new global::System.Data.DataColumn("TENDP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENDP);
                this.columnMAKV = new global::System.Data.DataColumn("MAKV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAKV);
                this.columnTENKV = new global::System.Data.DataColumn("TENKV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENKV);
                this.columnMAMDSD = new global::System.Data.DataColumn("MAMDSD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAMDSD);
                this.columnTENMDSD = new global::System.Data.DataColumn("TENMDSD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENMDSD);
                this.columnCHISODAU = new global::System.Data.DataColumn("CHISODAU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHISODAU);
                this.columnCHISOCUOI = new global::System.Data.DataColumn("CHISOCUOI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHISOCUOI);
                this.columnKLTIEUTHU = new global::System.Data.DataColumn("KLTIEUTHU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKLTIEUTHU);
                this.columnTHANG1 = new global::System.Data.DataColumn("THANG1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHANG1);
                this.columnTHANG2 = new global::System.Data.DataColumn("THANG2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHANG2);
                this.columnTTHAIGHI = new global::System.Data.DataColumn("TTHAIGHI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTTHAIGHI);
                this.columnTENTTHAI = new global::System.Data.DataColumn("TENTTHAI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENTTHAI);
                this.ExtendedProperties.Add("Generator_TablePropName", "_DSTTBANG");
                this.ExtendedProperties.Add("Generator_UserTableName", "DSTTBANG");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSTTBANGRow NewDSTTBANGRow() {
                return ((DSTTBANGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DSTTBANGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DSTTBANGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DSTTBANGRowChanged != null)) {
                    this.DSTTBANGRowChanged(this, new DSTTBANGRowChangeEvent(((DSTTBANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DSTTBANGRowChanging != null)) {
                    this.DSTTBANGRowChanging(this, new DSTTBANGRowChangeEvent(((DSTTBANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DSTTBANGRowDeleted != null)) {
                    this.DSTTBANGRowDeleted(this, new DSTTBANGRowChangeEvent(((DSTTBANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DSTTBANGRowDeleting != null)) {
                    this.DSTTBANGRowDeleting(this, new DSTTBANGRowChangeEvent(((DSTTBANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDSTTBANGRow(DSTTBANGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSTTBANG ds = new DSTTBANG();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DSTTBANGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DSTTBANGRow : global::System.Data.DataRow {
            
            private DSTTBANGDataTable tableDSTTBANG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DSTTBANGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDSTTBANG = ((DSTTBANGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MADP {
                get {
                    try {
                        return ((string)(this[this.tableDSTTBANG.MADPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADP\' in table \'DSTTBANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSTTBANG.MADPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MADB {
                get {
                    try {
                        return ((string)(this[this.tableDSTTBANG.MADBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADB\' in table \'DSTTBANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSTTBANG.MADBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SODB {
                get {
                    try {
                        return ((string)(this[this.tableDSTTBANG.SODBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SODB\' in table \'DSTTBANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSTTBANG.SODBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENKH {
                get {
                    try {
                        return ((string)(this[this.tableDSTTBANG.TENKHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENKH\' in table \'DSTTBANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSTTBANG.TENKHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENDP {
                get {
                    try {
                        return ((string)(this[this.tableDSTTBANG.TENDPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENDP\' in table \'DSTTBANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSTTBANG.TENDPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAKV {
                get {
                    try {
                        return ((string)(this[this.tableDSTTBANG.MAKVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAKV\' in table \'DSTTBANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSTTBANG.MAKVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENKV {
                get {
                    try {
                        return ((string)(this[this.tableDSTTBANG.TENKVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENKV\' in table \'DSTTBANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSTTBANG.TENKVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAMDSD {
                get {
                    try {
                        return ((string)(this[this.tableDSTTBANG.MAMDSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAMDSD\' in table \'DSTTBANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSTTBANG.MAMDSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENMDSD {
                get {
                    try {
                        return ((string)(this[this.tableDSTTBANG.TENMDSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENMDSD\' in table \'DSTTBANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSTTBANG.TENMDSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CHISODAU {
                get {
                    try {
                        return ((decimal)(this[this.tableDSTTBANG.CHISODAUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHISODAU\' in table \'DSTTBANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSTTBANG.CHISODAUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CHISOCUOI {
                get {
                    try {
                        return ((decimal)(this[this.tableDSTTBANG.CHISOCUOIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHISOCUOI\' in table \'DSTTBANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSTTBANG.CHISOCUOIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal KLTIEUTHU {
                get {
                    try {
                        return ((decimal)(this[this.tableDSTTBANG.KLTIEUTHUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KLTIEUTHU\' in table \'DSTTBANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSTTBANG.KLTIEUTHUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal THANG1 {
                get {
                    try {
                        return ((decimal)(this[this.tableDSTTBANG.THANG1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THANG1\' in table \'DSTTBANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSTTBANG.THANG1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal THANG2 {
                get {
                    try {
                        return ((decimal)(this[this.tableDSTTBANG.THANG2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THANG2\' in table \'DSTTBANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSTTBANG.THANG2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TTHAIGHI {
                get {
                    try {
                        return ((string)(this[this.tableDSTTBANG.TTHAIGHIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TTHAIGHI\' in table \'DSTTBANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSTTBANG.TTHAIGHIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENTTHAI {
                get {
                    try {
                        return ((string)(this[this.tableDSTTBANG.TENTTHAIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENTTHAI\' in table \'DSTTBANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDSTTBANG.TENTTHAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADPNull() {
                return this.IsNull(this.tableDSTTBANG.MADPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADPNull() {
                this[this.tableDSTTBANG.MADPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADBNull() {
                return this.IsNull(this.tableDSTTBANG.MADBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADBNull() {
                this[this.tableDSTTBANG.MADBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSODBNull() {
                return this.IsNull(this.tableDSTTBANG.SODBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSODBNull() {
                this[this.tableDSTTBANG.SODBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENKHNull() {
                return this.IsNull(this.tableDSTTBANG.TENKHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENKHNull() {
                this[this.tableDSTTBANG.TENKHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENDPNull() {
                return this.IsNull(this.tableDSTTBANG.TENDPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENDPNull() {
                this[this.tableDSTTBANG.TENDPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAKVNull() {
                return this.IsNull(this.tableDSTTBANG.MAKVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAKVNull() {
                this[this.tableDSTTBANG.MAKVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENKVNull() {
                return this.IsNull(this.tableDSTTBANG.TENKVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENKVNull() {
                this[this.tableDSTTBANG.TENKVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAMDSDNull() {
                return this.IsNull(this.tableDSTTBANG.MAMDSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAMDSDNull() {
                this[this.tableDSTTBANG.MAMDSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENMDSDNull() {
                return this.IsNull(this.tableDSTTBANG.TENMDSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENMDSDNull() {
                this[this.tableDSTTBANG.TENMDSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHISODAUNull() {
                return this.IsNull(this.tableDSTTBANG.CHISODAUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHISODAUNull() {
                this[this.tableDSTTBANG.CHISODAUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHISOCUOINull() {
                return this.IsNull(this.tableDSTTBANG.CHISOCUOIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHISOCUOINull() {
                this[this.tableDSTTBANG.CHISOCUOIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKLTIEUTHUNull() {
                return this.IsNull(this.tableDSTTBANG.KLTIEUTHUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKLTIEUTHUNull() {
                this[this.tableDSTTBANG.KLTIEUTHUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTHANG1Null() {
                return this.IsNull(this.tableDSTTBANG.THANG1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTHANG1Null() {
                this[this.tableDSTTBANG.THANG1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTHANG2Null() {
                return this.IsNull(this.tableDSTTBANG.THANG2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTHANG2Null() {
                this[this.tableDSTTBANG.THANG2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTTHAIGHINull() {
                return this.IsNull(this.tableDSTTBANG.TTHAIGHIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTTHAIGHINull() {
                this[this.tableDSTTBANG.TTHAIGHIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENTTHAINull() {
                return this.IsNull(this.tableDSTTBANG.TENTTHAIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENTTHAINull() {
                this[this.tableDSTTBANG.TENTTHAIColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DSTTBANGRowChangeEvent : global::System.EventArgs {
            
            private DSTTBANGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSTTBANGRowChangeEvent(DSTTBANGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DSTTBANGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591