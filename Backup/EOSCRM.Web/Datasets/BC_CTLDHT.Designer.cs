//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4959
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EOSCRM.Web.Datasets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BC_CTLDHT")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BC_CTLDHT : global::System.Data.DataSet {
        
        private BC_CTLDHTDataTable tableBC_CTLDHT;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BC_CTLDHT() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected BC_CTLDHT(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["BC_CTLDHT"] != null)) {
                    base.Tables.Add(new BC_CTLDHTDataTable(ds.Tables["BC_CTLDHT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BC_CTLDHTDataTable _BC_CTLDHT {
            get {
                return this.tableBC_CTLDHT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            BC_CTLDHT cln = ((BC_CTLDHT)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BC_CTLDHT"] != null)) {
                    base.Tables.Add(new BC_CTLDHTDataTable(ds.Tables["BC_CTLDHT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableBC_CTLDHT = ((BC_CTLDHTDataTable)(base.Tables["BC_CTLDHT"]));
            if ((initTable == true)) {
                if ((this.tableBC_CTLDHT != null)) {
                    this.tableBC_CTLDHT.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "BC_CTLDHT";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BC_CTLDHT.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBC_CTLDHT = new BC_CTLDHTDataTable();
            base.Tables.Add(this.tableBC_CTLDHT);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_BC_CTLDHT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BC_CTLDHT ds = new BC_CTLDHT();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void BC_CTLDHTRowChangeEventHandler(object sender, BC_CTLDHTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BC_CTLDHTDataTable : global::System.Data.TypedTableBase<BC_CTLDHTRow> {
            
            private global::System.Data.DataColumn columnMADDK;
            
            private global::System.Data.DataColumn columnTENCT;
            
            private global::System.Data.DataColumn columnTENNVTHICONG;
            
            private global::System.Data.DataColumn columnNGAYDONGTIEN;
            
            private global::System.Data.DataColumn columnNGAYGIAOTC;
            
            private global::System.Data.DataColumn columnNGAYHOANTHANH;
            
            private global::System.Data.DataColumn columnTIENNC_MIENPHI;
            
            private global::System.Data.DataColumn columnTONGTIEN_MIENPHI;
            
            private global::System.Data.DataColumn columnTIENNC;
            
            private global::System.Data.DataColumn columnTONGTIEN;
            
            private global::System.Data.DataColumn columnSODH;
            
            private global::System.Data.DataColumn columnSOCT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BC_CTLDHTDataTable() {
                this.TableName = "BC_CTLDHT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BC_CTLDHTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BC_CTLDHTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MADDKColumn {
                get {
                    return this.columnMADDK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENCTColumn {
                get {
                    return this.columnTENCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TENNVTHICONGColumn {
                get {
                    return this.columnTENNVTHICONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYDONGTIENColumn {
                get {
                    return this.columnNGAYDONGTIEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYGIAOTCColumn {
                get {
                    return this.columnNGAYGIAOTC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAYHOANTHANHColumn {
                get {
                    return this.columnNGAYHOANTHANH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIENNC_MIENPHIColumn {
                get {
                    return this.columnTIENNC_MIENPHI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TONGTIEN_MIENPHIColumn {
                get {
                    return this.columnTONGTIEN_MIENPHI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIENNCColumn {
                get {
                    return this.columnTIENNC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TONGTIENColumn {
                get {
                    return this.columnTONGTIEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SODHColumn {
                get {
                    return this.columnSODH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOCTColumn {
                get {
                    return this.columnSOCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BC_CTLDHTRow this[int index] {
                get {
                    return ((BC_CTLDHTRow)(this.Rows[index]));
                }
            }
            
            public event BC_CTLDHTRowChangeEventHandler BC_CTLDHTRowChanging;
            
            public event BC_CTLDHTRowChangeEventHandler BC_CTLDHTRowChanged;
            
            public event BC_CTLDHTRowChangeEventHandler BC_CTLDHTRowDeleting;
            
            public event BC_CTLDHTRowChangeEventHandler BC_CTLDHTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBC_CTLDHTRow(BC_CTLDHTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BC_CTLDHTRow AddBC_CTLDHTRow(string MADDK, string TENCT, string TENNVTHICONG, System.DateTime NGAYDONGTIEN, System.DateTime NGAYGIAOTC, System.DateTime NGAYHOANTHANH, decimal TIENNC_MIENPHI, decimal TONGTIEN_MIENPHI, decimal TIENNC, decimal TONGTIEN, decimal SODH, string SOCT) {
                BC_CTLDHTRow rowBC_CTLDHTRow = ((BC_CTLDHTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MADDK,
                        TENCT,
                        TENNVTHICONG,
                        NGAYDONGTIEN,
                        NGAYGIAOTC,
                        NGAYHOANTHANH,
                        TIENNC_MIENPHI,
                        TONGTIEN_MIENPHI,
                        TIENNC,
                        TONGTIEN,
                        SODH,
                        SOCT};
                rowBC_CTLDHTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBC_CTLDHTRow);
                return rowBC_CTLDHTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BC_CTLDHTDataTable cln = ((BC_CTLDHTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BC_CTLDHTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMADDK = base.Columns["MADDK"];
                this.columnTENCT = base.Columns["TENCT"];
                this.columnTENNVTHICONG = base.Columns["TENNVTHICONG"];
                this.columnNGAYDONGTIEN = base.Columns["NGAYDONGTIEN"];
                this.columnNGAYGIAOTC = base.Columns["NGAYGIAOTC"];
                this.columnNGAYHOANTHANH = base.Columns["NGAYHOANTHANH"];
                this.columnTIENNC_MIENPHI = base.Columns["TIENNC_MIENPHI"];
                this.columnTONGTIEN_MIENPHI = base.Columns["TONGTIEN_MIENPHI"];
                this.columnTIENNC = base.Columns["TIENNC"];
                this.columnTONGTIEN = base.Columns["TONGTIEN"];
                this.columnSODH = base.Columns["SODH"];
                this.columnSOCT = base.Columns["SOCT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMADDK = new global::System.Data.DataColumn("MADDK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADDK);
                this.columnTENCT = new global::System.Data.DataColumn("TENCT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENCT);
                this.columnTENNVTHICONG = new global::System.Data.DataColumn("TENNVTHICONG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTENNVTHICONG);
                this.columnNGAYDONGTIEN = new global::System.Data.DataColumn("NGAYDONGTIEN", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYDONGTIEN);
                this.columnNGAYGIAOTC = new global::System.Data.DataColumn("NGAYGIAOTC", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYGIAOTC);
                this.columnNGAYHOANTHANH = new global::System.Data.DataColumn("NGAYHOANTHANH", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYHOANTHANH);
                this.columnTIENNC_MIENPHI = new global::System.Data.DataColumn("TIENNC_MIENPHI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIENNC_MIENPHI);
                this.columnTONGTIEN_MIENPHI = new global::System.Data.DataColumn("TONGTIEN_MIENPHI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTONGTIEN_MIENPHI);
                this.columnTIENNC = new global::System.Data.DataColumn("TIENNC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIENNC);
                this.columnTONGTIEN = new global::System.Data.DataColumn("TONGTIEN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTONGTIEN);
                this.columnSODH = new global::System.Data.DataColumn("SODH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSODH);
                this.columnSOCT = new global::System.Data.DataColumn("SOCT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOCT);
                this.ExtendedProperties.Add("Generator_TablePropName", "_BC_CTLDHT");
                this.ExtendedProperties.Add("Generator_UserTableName", "BC_CTLDHT");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BC_CTLDHTRow NewBC_CTLDHTRow() {
                return ((BC_CTLDHTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BC_CTLDHTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BC_CTLDHTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BC_CTLDHTRowChanged != null)) {
                    this.BC_CTLDHTRowChanged(this, new BC_CTLDHTRowChangeEvent(((BC_CTLDHTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BC_CTLDHTRowChanging != null)) {
                    this.BC_CTLDHTRowChanging(this, new BC_CTLDHTRowChangeEvent(((BC_CTLDHTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BC_CTLDHTRowDeleted != null)) {
                    this.BC_CTLDHTRowDeleted(this, new BC_CTLDHTRowChangeEvent(((BC_CTLDHTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BC_CTLDHTRowDeleting != null)) {
                    this.BC_CTLDHTRowDeleting(this, new BC_CTLDHTRowChangeEvent(((BC_CTLDHTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBC_CTLDHTRow(BC_CTLDHTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BC_CTLDHT ds = new BC_CTLDHT();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BC_CTLDHTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BC_CTLDHTRow : global::System.Data.DataRow {
            
            private BC_CTLDHTDataTable tableBC_CTLDHT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BC_CTLDHTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBC_CTLDHT = ((BC_CTLDHTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MADDK {
                get {
                    try {
                        return ((string)(this[this.tableBC_CTLDHT.MADDKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MADDK\' in table \'BC_CTLDHT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBC_CTLDHT.MADDKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENCT {
                get {
                    try {
                        return ((string)(this[this.tableBC_CTLDHT.TENCTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENCT\' in table \'BC_CTLDHT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBC_CTLDHT.TENCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TENNVTHICONG {
                get {
                    try {
                        return ((string)(this[this.tableBC_CTLDHT.TENNVTHICONGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TENNVTHICONG\' in table \'BC_CTLDHT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBC_CTLDHT.TENNVTHICONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NGAYDONGTIEN {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBC_CTLDHT.NGAYDONGTIENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYDONGTIEN\' in table \'BC_CTLDHT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBC_CTLDHT.NGAYDONGTIENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NGAYGIAOTC {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBC_CTLDHT.NGAYGIAOTCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYGIAOTC\' in table \'BC_CTLDHT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBC_CTLDHT.NGAYGIAOTCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NGAYHOANTHANH {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBC_CTLDHT.NGAYHOANTHANHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAYHOANTHANH\' in table \'BC_CTLDHT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBC_CTLDHT.NGAYHOANTHANHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIENNC_MIENPHI {
                get {
                    try {
                        return ((decimal)(this[this.tableBC_CTLDHT.TIENNC_MIENPHIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIENNC_MIENPHI\' in table \'BC_CTLDHT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBC_CTLDHT.TIENNC_MIENPHIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TONGTIEN_MIENPHI {
                get {
                    try {
                        return ((decimal)(this[this.tableBC_CTLDHT.TONGTIEN_MIENPHIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TONGTIEN_MIENPHI\' in table \'BC_CTLDHT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBC_CTLDHT.TONGTIEN_MIENPHIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIENNC {
                get {
                    try {
                        return ((decimal)(this[this.tableBC_CTLDHT.TIENNCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIENNC\' in table \'BC_CTLDHT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBC_CTLDHT.TIENNCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TONGTIEN {
                get {
                    try {
                        return ((decimal)(this[this.tableBC_CTLDHT.TONGTIENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TONGTIEN\' in table \'BC_CTLDHT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBC_CTLDHT.TONGTIENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SODH {
                get {
                    try {
                        return ((decimal)(this[this.tableBC_CTLDHT.SODHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SODH\' in table \'BC_CTLDHT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBC_CTLDHT.SODHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOCT {
                get {
                    try {
                        return ((string)(this[this.tableBC_CTLDHT.SOCTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOCT\' in table \'BC_CTLDHT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBC_CTLDHT.SOCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADDKNull() {
                return this.IsNull(this.tableBC_CTLDHT.MADDKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADDKNull() {
                this[this.tableBC_CTLDHT.MADDKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENCTNull() {
                return this.IsNull(this.tableBC_CTLDHT.TENCTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENCTNull() {
                this[this.tableBC_CTLDHT.TENCTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTENNVTHICONGNull() {
                return this.IsNull(this.tableBC_CTLDHT.TENNVTHICONGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTENNVTHICONGNull() {
                this[this.tableBC_CTLDHT.TENNVTHICONGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYDONGTIENNull() {
                return this.IsNull(this.tableBC_CTLDHT.NGAYDONGTIENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYDONGTIENNull() {
                this[this.tableBC_CTLDHT.NGAYDONGTIENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYGIAOTCNull() {
                return this.IsNull(this.tableBC_CTLDHT.NGAYGIAOTCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYGIAOTCNull() {
                this[this.tableBC_CTLDHT.NGAYGIAOTCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYHOANTHANHNull() {
                return this.IsNull(this.tableBC_CTLDHT.NGAYHOANTHANHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYHOANTHANHNull() {
                this[this.tableBC_CTLDHT.NGAYHOANTHANHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIENNC_MIENPHINull() {
                return this.IsNull(this.tableBC_CTLDHT.TIENNC_MIENPHIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIENNC_MIENPHINull() {
                this[this.tableBC_CTLDHT.TIENNC_MIENPHIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTONGTIEN_MIENPHINull() {
                return this.IsNull(this.tableBC_CTLDHT.TONGTIEN_MIENPHIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTONGTIEN_MIENPHINull() {
                this[this.tableBC_CTLDHT.TONGTIEN_MIENPHIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIENNCNull() {
                return this.IsNull(this.tableBC_CTLDHT.TIENNCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIENNCNull() {
                this[this.tableBC_CTLDHT.TIENNCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTONGTIENNull() {
                return this.IsNull(this.tableBC_CTLDHT.TONGTIENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTONGTIENNull() {
                this[this.tableBC_CTLDHT.TONGTIENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSODHNull() {
                return this.IsNull(this.tableBC_CTLDHT.SODHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSODHNull() {
                this[this.tableBC_CTLDHT.SODHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOCTNull() {
                return this.IsNull(this.tableBC_CTLDHT.SOCTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOCTNull() {
                this[this.tableBC_CTLDHT.SOCTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BC_CTLDHTRowChangeEvent : global::System.EventArgs {
            
            private BC_CTLDHTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BC_CTLDHTRowChangeEvent(BC_CTLDHTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BC_CTLDHTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591